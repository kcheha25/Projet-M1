from ultralytics import YOLO
from matplotlib import pyplot as plt
from PIL import Image
import cv2


#Instance
model = YOLO('yolov8x-seg.yaml') # build a new model from YAML
model = YOLO('yolov8x-seg.pt')  
#model = YOLO('C:/Users/karim/Desktop/p/data/NuInsSeg_Nuclei_dataset/models/yolov8/results/20_epochs-/weights/last.pt')  # Transfer the weights from a pretrained model (recommended for training)

import yaml
with open("data.yaml", 'r') as stream:
    num_classes = str(yaml.safe_load(stream)['nc'])

#Define a project --> Destination directory for all results
project = "C:/Users/karim/Desktop/p/data/projet_m1/models/yolov8/results"
#Define subdirectory for this specific training
#name = "20_epochs-" #note that if you run the training again, it creates a directory: 20_epochs-2
name = "27_epochs-ratio" #for tutorial
    
#model.tune(data='data.yaml', epochs=27, iterations=50, optimizer='AdamW', plots=False, save=False)
# Train the model
results = model.train(data='data.yaml',
                      project=project,
                      name=name,
                      epochs=27,
                      patience=10, 
                      batch=16, mask_ratio=2)
#optimizer: auto
#results = model.val() 


my_new_model = YOLO("C:/Users/karim/Desktop/p/data/projet_m1/models/yolov8/results/27_epochs-3/weights/best.pt")
metrics = my_new_model.val(data='data.yaml',split="test")
metrics.box.r
new_image = 'test/images/Tbaro-WT-pyruvte-point-final_2D_ch00_part_3_jpg.rf.a184c86c45e04ac3896648d88d0c3533.jpg'
new_results = my_new_model.predict(new_image, conf=0.2)  #Adjust conf threshold

new_result_array = new_results[0].plot()
plt.figure(figsize=(9, 9))
plt.imshow(new_result_array)
output_filename = "data/projet_m1/input_image.jpg"
cv2.imwrite(output_filename, new_result_array)

nombre_predictions = len(new_results[0].boxes)  # Accède au premier élément de la liste

print(f"Nombre de prédictions : {nombre_predictions}")